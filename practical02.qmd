---
title: "Getting started with R"
author: Atena Karimi
date: today
format: html
---

### Exercise 1 {#sec-1}

* Create a vector of the letters A, B and C.

```{r}
v <- c("A","B","C")
v

```
> Your answer as text



* Assign the vector to a variable `my_letters`
```{r}
my_letters <- v

```


* Check the what happens when you run `letters` (just this) on the command line.
```{r}
letters

```

> Your answer as text



* What happens when you concatenate two vectors? Add `c(my_letters , my_letters)`
```{r}
c(my_letters,my_letters)


```

> Your answer as text



* Add the number 1 to letters. What happens to the type of the vector?
```{r}
new_v <- c(letters,1)
typeof(new_v)

```

> Your answer as text



### Exercise 2


1. Create a vector `my_vec` with the numbers from 1 through 8.
2. Apply the operation `+2` to the vector/
3. Add the vector containing 1, 2, 3, 4 to `my_vec`. What do you observe?

```{r}
my_vec <- c(1:8)
my_vec+2

my_vec + c(1:4)



```



### Exercise 3

* Consider the R output of the matrix below:

```
 [,1] [,2]
 [1,]    4    1
 [2,]    9    5
 [3,]   10    7
```

1. What was one of the correct commands used to write this matrix?
2. Assign the matrix as `A`
3. Check the dimensions
4. Extract the element `5`
5. Add the vector `c(0,0,0)` as a new column and update `A`
6. Modify the element 4 to `0`
7. Compute the transpose of `A`

```{r}
#1
matrix(c(4,9,10,1,5,7),nrow = 3)

#2
A <- matrix(c(4,9,10,1,5,7),nrow = 3)

#3
dim(A)

#4
A[2,2]

#5
A <- cbind(A,c(0,0,0))

#6
A[1,1] <- 0

#7
t(A)


```


8. Are any values in `A` larger than 10? 
```{r}
A[A>10]
```

9. Are all values in `A` smaller than 10?
```{r}
length(A)

A[A<10]

if (length(A[A<10]) == length(A)) {
    print("Yes all the values in A is smaller than 10.")
}

```

### Exercise 4

1. Create a function that sums up two values even if provided as characters values

```{r}

sum_func <- function(x,y) {
    return(as.numeric(x)+as.numeric(y))
}

sum_func('1','2')



```


### Exercise 5

1. Create a function that returns the mean, median and standard deviation.

```{r}
math_func <- function(x) {
    mean1 <- mean(x)
        median1 <- median(x)
        sd1 <- sd(x)
        result <- c(mean1,median1 , sd1)
        return(result)
}
# or
math_func <- function(x) {
    mean1 <- mean(x)
        median1 <- median(x)
        sd1 <- sd(x)
        result <- list(mean = mean1,
                       median = median1,
                       sd = sd1)
        return(result)
}


math_func(c(1,2,3))
```


### Exercise 6
1. Create a pipe statement that counts the number of NAs in vector containing numbers, characters and missing values.
The output of `c('1' , "a", NA, "2", NA)` should be 2.

```{r}
v1 <- c('1' , "a", NA, "2", NA)

is.na(v1) |> sum()

```


